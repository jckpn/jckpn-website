:root {
  --pure-white: #fff;
  --editor-bg-color: #fffefc;
  --font-color: #333;
  --header-color: #111;
  --pure-black: #000;
  --mid-grey: #888;
  --light-grey: #bbb;
  --blue-accent: #3090d0;
  --image-border-color: #888;
  --image-shadow-color: rgba(0,0,0,0.2);
  --toolbar-bg-color: #fff;
  --toolbar-border-color: #bbb;
  --toolbar-shadow-color: rgba(0,0,0,0.2);
  --settings-menu-border-color: #eee;
  --bg-color: #eee;
  --page-shadow-color: var(--toolbar-shadow-color);
  --red-accent: #bd6e6e; }

[theme="dark"] {
  --pure-white: #000;
  --editor-bg-color: #222;
  --font-color: #ddd;
  --header-color: #eee;
  --pure-black: #fff;
  --mid-grey: #777;
  --light-grey: #333;
  --blue-accent: #3090d0;
  --image-border-color: #888;
  --image-shadow-color: rgba(0,0,0,0.2);
  --toolbar-bg-color: #333;
  --toolbar-border-color: #333;
  --toolbar-shadow-color: rgba(0,0,0,0.3);
  --settings-menu-border-color: #202020;
  --bg-color: var(--editor-bg-color);
  --page-shadow-color: transparent;
  --red-accent: #bd6e6e; }
  [theme="dark"] img {
    filter: invert(100%); }

[theme="sepia"] {
  --pure-white: #fff;
  --editor-bg-color: #f5f0e8;
  --font-color: #333;
  --header-color: #111;
  --pure-black: #000;
  --mid-grey: #888;
  --light-grey: #bbb;
  --blue-accent: #3090d0;
  --image-border-color: #888;
  --image-shadow-color: rgba(0,0,0,0.2);
  --toolbar-bg-color: #fff7f0;
  --toolbar-border-color: #bbb;
  --toolbar-shadow-color: rgba(0,0,0,0.2);
  --settings-menu-border-color: #eee;
  --bg-color: #eee;
  --page-shadow-color: var(--toolbar-shadow-color);
  --red-accent: #bd6e6e; }
  [theme="sepia"] img {
    filter: sepia(100%); }

@font-face {
  font-family: 'Latin Modern Roman';
  src: url("../assets/fonts/lmroman10-regular.otf") format("opentype");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Latin Modern Roman';
  src: url("../assets/fonts/lmroman10-bold.otf") format("opentype");
  font-weight: bold;
  font-style: normal; }

@font-face {
  font-family: 'Latin Modern Roman';
  src: url("../assets/fonts/lmroman10-italic.otf") format("opentype");
  font-weight: normal;
  font-style: italic; }

@font-face {
  font-family: 'Latin Modern Roman';
  src: url("../assets/fonts/lmroman10-bolditalic.otf") format("opentype");
  font-weight: bold;
  font-style: italic; }

@font-face {
  font-family: 'Metropolis';
  src: url("../assets/fonts/Metropolis-Regular.otf") format("opentype"); }

body {
  background-color: var(--editor-bg-color);
  margin: auto;
  padding: 0;
  font-family: 'Metropolis', sans-serif;
  overflow: hidden; }

#editor.ql-container {
  border: none; }

#editor.ql-container > div.ql-editor,
.aicfg-demo {
  color: var(--font-color);
  font-family: 'Latin Modern Roman';
  text-shadow: 0 0 1px var(--toolbar-shadow-color);
  border: none;
  font-size: 19px;
  line-height: 1.3; }

#editor.ql-container > div.ql-editor {
  padding-bottom: 100px; }

#editor.ql-container > div.ql-editor h1, #editor.ql-container > div.ql-editor h2, #editor.ql-container > div.ql-editor h3 {
  color: var(--header-color);
  margin-top: 1.3em;
  margin-bottom: .5em; }

#editor.ql-container > div.ql-editor h1 {
  font-size: 1.9em;
  margin-left: -3px; }

#editor.ql-container > div.ql-editor h2 {
  font-size: 1.35em;
  margin-left: -2px; }

#editor.ql-container > div.ql-editor h3 {
  font-size: 1.1em;
  margin-left: -1px; }

#editor.ql-container > div.ql-editor h1 + h2, #editor.ql-container > div.ql-editor h2 + h3 {
  margin-top: 0em; }

#editor.ql-container > div.ql-editor p, #editor.ql-container > div.ql-editor ul, #editor.ql-container > div.ql-editor ol, #editor.ql-container > div.ql-editor pre, #editor.ql-container > div.ql-editor blockquote {
  margin-top: .8rem;
  margin-bottom: .8rem; }

#editor.ql-container > div.ql-editor p + ul, #editor.ql-container > div.ql-editor p + ol {
  margin-top: -.3rem; }

#editor.ql-container > div.ql-editor li + li {
  margin-top: .3rem; }

#editor.ql-container > div.ql-editor .ql-toolbar.ql-snow svg > * {
  stroke: var(--pure-black) !important; }

#editor.ql-container > div.ql-editor p img.editor-img {
  position: relative;
  display: block;
  margin-top: 2rem !important;
  margin-bottom: 2rem !important;
  left: 50%;
  transform: translateX(-50%);
  /* center image */
  padding: 1rem;
  border: 1px solid var(--image-border-color);
  box-shadow: 0.5rem 0.5rem 0 var(--image-shadow-color); }

body.numberedhs-enabled #editor.ql-container > div.ql-editor, body.numberedhs-noh1 #editor.ql-container > div.ql-editor {
  counter-reset: h1-count; }
  body.numberedhs-enabled #editor.ql-container > div.ql-editor > h1::before, body.numberedhs-enabled #editor.ql-container > div.ql-editor > h2::before, body.numberedhs-enabled #editor.ql-container > div.ql-editor > h3::before, body.numberedhs-noh1 #editor.ql-container > div.ql-editor > h1::before, body.numberedhs-noh1 #editor.ql-container > div.ql-editor > h2::before, body.numberedhs-noh1 #editor.ql-container > div.ql-editor > h3::before {
    opacity: .3;
    margin-right: 1.4ch; }
  body.numberedhs-enabled #editor.ql-container > div.ql-editor > h1, body.numberedhs-noh1 #editor.ql-container > div.ql-editor > h1 {
    counter-increment: h1-count;
    counter-reset: h2-count; }
  body.numberedhs-enabled #editor.ql-container > div.ql-editor > h2, body.numberedhs-noh1 #editor.ql-container > div.ql-editor > h2 {
    counter-increment: h2-count;
    counter-reset: h3-count; }
  body.numberedhs-enabled #editor.ql-container > div.ql-editor > h3, body.numberedhs-noh1 #editor.ql-container > div.ql-editor > h3 {
    counter-increment: h3-count; }
  body.numberedhs-enabled #editor.ql-container > div.ql-editor > h1::before, body.numberedhs-noh1 #editor.ql-container > div.ql-editor > h1::before {
    content: counter(h1-count); }
  body.numberedhs-enabled #editor.ql-container > div.ql-editor > h2::before, body.numberedhs-noh1 #editor.ql-container > div.ql-editor > h2::before {
    content: counter(h1-count) "." counter(h2-count); }
  body.numberedhs-enabled #editor.ql-container > div.ql-editor > h3::before, body.numberedhs-noh1 #editor.ql-container > div.ql-editor > h3::before {
    content: counter(h1-count) "." counter(h2-count) "." counter(h3-count); }

body.numberedhs-noh1 #editor.ql-container > div.ql-editor > h1::before {
  display: none !important; }
